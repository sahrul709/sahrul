<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Website Pendukung Kegiatan Belajar</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css">
    <style>
        @keyframes float {
            0% {
                transform: translatey(0px);
            }
            50% {
                transform: translatey(-10px);
            }
            100% {
                transform: translatey(0px);
            }
        }

        body {
            background: linear-gradient(to bottom, #1c92d2, #f2fcfe);
            font-family: 'Poppins', sans-serif;
            color: #333;
            position: relative;
            overflow-x: hidden;
        }

        .background-decorations {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            pointer-events: none;
        }

        .decoration {
            position: absolute;
            animation: float 4s ease-in-out infinite;
            opacity: 0.7;
        }

        .decoration-1 {
            top: 10%;
            left: 20%;
            width: 100px;
            height: 100px;
            background: url('https://img.icons8.com/color/100/000000/open-book.png') no-repeat center;
            background-size: contain;
        }

        .decoration-2 {
            top: 50%;
            left: 10%;
            width: 80px;
            height: 80px;
            background: url('https://img.icons8.com/color/100/000000/pencil.png') no-repeat center;
            background-size: contain;
        }

        .decoration-3 {
            top: 30%;
            left: 70%;
            width: 120px;
            height: 120px;
            background: url('https://img.icons8.com/color/100/000000/school.png') no-repeat center;
            background-size: contain;
        }

        .container {
            max-width: 1200px;
            margin: 2rem auto;
            background: #ffffff;
            border-radius: 15px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

        header {
            background: #4c51bf;
            color: white;
            padding: 1rem;
            text-align: center;
        }

        header h1 {
            font-size: 2.5rem;
        }

        .split-screen {
            display: flex;
            flex-direction: row;
        }

        .split-screen > div {
            flex: 1;
            padding: 2rem;
        }

        .section-title {
            font-size: 1.8rem;
            margin-bottom: 1rem;
            color: #4c51bf;
            text-align: center;
        }

        .pomodoro-timer, .todo-list {
            background: linear-gradient(to bottom, #f9fafb, #e2e8f0);
            padding: 2rem;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
        }

        .timer {
            font-size: 3rem;
            font-weight: bold;
            text-align: center;
            margin-bottom: 1rem;
            color: #4c51bf;
        }

        button {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 5px;
            font-size: 1rem;
            cursor: pointer;
            transition: transform 0.2s, background-color 0.3s;
        }

        button:hover {
            transform: scale(1.05);
        }

        .start-btn {
            background-color: #48bb78;
            color: white;
        }

        .start-btn:hover {
            background-color: #38a169;
        }

        .reset-btn {
            background-color: #f56565;
            color: white;
        }

        .reset-btn:hover {
            background-color: #e53e3e;
        }

        .todo-input {
            width: calc(100% - 3rem);
            padding: 0.75rem;
            margin: 1rem auto;
            border: 2px solid #e2e8f0;
            border-radius: 5px;
            font-size: 1rem;
        }

        .todo-input:focus {
            border-color: #4c51bf;
            outline: none;
        }

        .todo-list ul {
            list-style: none;
            padding: 0;
        }

        .todo-list li {
            background: #ffffff;
            margin-bottom: 0.5rem;
            padding: 0.75rem;
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .todo-list li:hover {
            background-color: #f7fafc;
        }

        .todo-actions button {
            margin-left: 0.5rem;
        }

        .done-btn {
            color: #48bb78;
            font-weight: bold;
        }

        .delete-btn {
            color: #e53e3e;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="background-decorations">
        <div class="decoration decoration-1"></div>
        <div class="decoration decoration-2"></div>
        <div class="decoration decoration-3"></div>
    </div>
    <div class="container">
        <header>
            <h1>Website Pendukung Kegiatan Belajar</h1>
        </header>
        <main class="split-screen">
            <!-- Pomodoro Timer -->
            <div class="pomodoro-timer">
                <h2 class="section-title">Pomodoro Timer</h2>
                <p class="timer" id="timer">25:00</p>
                <div class="flex justify-center space-x-4">
                    <button id="start-btn" class="start-btn">Start</button>
                    <button id="reset-btn" class="reset-btn">Reset</button>
                </div>
            </div>

            <!-- To-Do List -->
            <div class="todo-list">
                <h2 class="section-title">To-Do List</h2>
                <input id="todo-input" class="todo-input" type="text" placeholder="Tambah target belajar...">
                <div class="flex justify-center mb-4">
                    <button id="add-btn" class="start-btn">Tambah</button>
                </div>
                <ul id="todo-list">
                    <!-- To-Do Items will appear here -->
                </ul>
            </div>
        </main>
    </div>

    <script>
        // Pomodoro Timer
        let timerInterval;
        let timeLeft = 25 * 60;

        const timerDisplay = document.getElementById('timer');
        const startBtn = document.getElementById('start-btn');
        const resetBtn = document.getElementById('reset-btn');

        function updateTimerDisplay() {
            const minutes = Math.floor(timeLeft / 60).toString().padStart(2, '0');
            const seconds = (timeLeft % 60).toString().padStart(2, '0');
            timerDisplay.textContent = `${minutes}:${seconds}`;
        }

        function startTimer() {
            if (timerInterval) return;

            timerInterval = setInterval(() => {
                if (timeLeft > 0) {
                    timeLeft--;
                    updateTimerDisplay();
                } else {
                    clearInterval(timerInterval);
                    timerInterval = null;
                    alert('Waktu habis!');
                }
            }, 1000);
        }

        function resetTimer() {
            clearInterval(timerInterval);
            timerInterval = null;
            timeLeft = 25 * 60;
            updateTimerDisplay();
        }

        startBtn.addEventListener('click', startTimer);
        resetBtn.addEventListener('click', resetTimer);

        // To-Do List
        const todoInput = document.getElementById('todo-input');
        const addBtn = document.getElementById('add-btn');
        const todoList = document.getElementById('todo-list');

        function loadTodos() {
            const todos = JSON.parse(localStorage.getItem('todos')) || [];
            todos.forEach(todo => {
                addTodoToDOM(todo.text, todo.completed);
            });
        }

        function saveTodos() {
            const todos = [];
            document.querySelectorAll('#todo-list li').forEach(li => {
                todos.push({
                    text: li.querySelector('span').textContent,
                    completed: li.classList.contains('line-through')
                });
            });
            localStorage.setItem('todos', JSON.stringify(todos));
        }

        function addTodoToDOM(text, completed = false) {
            const li = document.createElement('li');
            li.className = `flex items-center justify-between ${completed ? 'line-through text-gray-500' : ''}`;

            const span = document.createElement('span');
            span.textContent = text;
            li.appendChild(span);

            const actions = document.createElement('div');
            actions.className = 'todo-actions';

            const doneBtn = document.createElement('button');
            doneBtn.textContent = '✔';
            doneBtn.className = 'done-btn';
            doneBtn.addEventListener('click', () => {
                li.classList.toggle('line-through');
                li.classList.toggle('text-gray-500');
                saveTodos();
            });

            const deleteBtn = document.createElement('button');
            deleteBtn.textContent = '✘';
            deleteBtn.className = 'delete-btn';
            deleteBtn.addEventListener('click', () => {
                li.remove();
                saveTodos();
            });

            actions.appendChild(doneBtn);
            actions.appendChild(deleteBtn);
            li.appendChild(actions);

            todoList.appendChild(li);
        }

        addBtn.addEventListener('click', () => {
            const text = todoInput.value.trim();
            if (text) {
                addTodoToDOM(text);
                saveTodos();
                todoInput.value = '';
            }
        });

        loadTodos();
    </script>
</body>
</html>
